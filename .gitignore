video_capture
xml_models/built_scene.xml
xml_models/built_scene_for_predictor.xml
3D_bool_space/
Demo.skyc
Demo.zip
MUJOCO_LOG.TXT
SKYC_files/
Sim.skyc
aiml_virtual/util/mp_video_saver.py
doc.txt
pickle_to_sky.zip
pickle_to_sky/
scripts/crazyflie_sim.py
scripts/demo_2024_01_25.py
scripts/mocap_hook_position.py
scripts/plot_3D_bspace.py
scripts/teardrop_plotz.py
scripts/tutorial.py
scripts/tutorial01.py
scripts/tutorial02.py
server_test_message01.txt
slice_h3.png
slice_h4.png
slice_h5.png
trajectory.json
venv3.10/
xml_models/built_scene_buildings.xml
xml_models/built_scene_dyn_traj.xml
xml_models/built_scene_transport.xml
xml_models/demo_24_01_25.xml
xml_models/heightmaps/world0_128.png
xml_models/heightmaps/world0_256.png
xml_models/heightmaps/world0_512.png
xml_models/heightmaps/world0_64.png
xml_models/meshes/bumblebee/quad_model_no_prop_simplified__.stl
xml_models/meshes/radar/csepp.stl
xml_models/test_obstacle_avoidance.xml

__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot


# Scrapy stuff:
.scrapy


# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/


# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject


# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
csv/